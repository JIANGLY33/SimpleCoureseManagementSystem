<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jalinyiel.coursystem.system.repository.StudentMapper">
  <resultMap id="BaseResultMap" type="com.jalinyiel.coursystem.system.domain.Student">
    <id column="stu_id" jdbcType="BIGINT" property="stuId" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="classes" jdbcType="VARCHAR" property="classes" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stu_id, stu_name, classes, subject
  </sql>
  <select id="selectByExample" parameterType="com.jalinyiel.coursystem.system.domain.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where stu_id = #{stuId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where stu_id = #{stuId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jalinyiel.coursystem.system.domain.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jalinyiel.coursystem.system.domain.Student">
    insert into student (stu_id, stu_name, classes, 
      subject)
    values (#{stuId,jdbcType=BIGINT}, #{stuName,jdbcType=VARCHAR}, #{classes,jdbcType=VARCHAR}, 
      #{subject,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jalinyiel.coursystem.system.domain.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="stuName != null">
        stu_name,
      </if>
      <if test="classes != null">
        classes,
      </if>
      <if test="subject != null">
        subject,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        #{stuId,jdbcType=BIGINT},
      </if>
      <if test="stuName != null">
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="classes != null">
        #{classes,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jalinyiel.coursystem.system.domain.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=BIGINT},
      </if>
      <if test="record.stuName != null">
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.classes != null">
        classes = #{record.classes,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null">
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set stu_id = #{record.stuId,jdbcType=BIGINT},
      stu_name = #{record.stuName,jdbcType=VARCHAR},
      classes = #{record.classes,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jalinyiel.coursystem.system.domain.Student">
    update student
    <set>
      <if test="stuName != null">
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="classes != null">
        classes = #{classes,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
    </set>
    where stu_id = #{stuId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jalinyiel.coursystem.system.domain.Student">
    update student
    set stu_name = #{stuName,jdbcType=VARCHAR},
      classes = #{classes,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR}
    where stu_id = #{stuId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.jalinyiel.coursystem.system.domain.Student">
    <result column="SNO" jdbcType="CHAR" property="sno" />
    <result column="SNAME" jdbcType="CHAR" property="sname" />
    <result column="SEX" jdbcType="CHAR" property="sex" />
    <result column="SAGE" jdbcType="TINYINT" property="sage" />
    <result column="SDEPT" jdbcType="CHAR" property="sdept" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    SNO, SNAME, SEX, SAGE, SDEPT
  </sql>
  <select id="selectByExample" parameterType="com.jalinyiel.coursystem.system.domain.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jalinyiel.coursystem.system.domain.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jalinyiel.coursystem.system.domain.Student">
    insert into student (SNO, SNAME, SEX, SAGE, 
      SDEPT)
    values (#{sno,jdbcType=CHAR}, #{sname,jdbcType=CHAR}, #{sex,jdbcType=CHAR}, #{sage,jdbcType=TINYINT}, 
      #{sdept,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jalinyiel.coursystem.system.domain.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        SNO,
      </if>
      <if test="sname != null">
        SNAME,
      </if>
      <if test="sex != null">
        SEX,
      </if>
      <if test="sage != null">
        SAGE,
      </if>
      <if test="sdept != null">
        SDEPT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        #{sno,jdbcType=CHAR},
      </if>
      <if test="sname != null">
        #{sname,jdbcType=CHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="sage != null">
        #{sage,jdbcType=TINYINT},
      </if>
      <if test="sdept != null">
        #{sdept,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jalinyiel.coursystem.system.domain.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.sno != null">
        SNO = #{record.sno,jdbcType=CHAR},
      </if>
      <if test="record.sname != null">
        SNAME = #{record.sname,jdbcType=CHAR},
      </if>
      <if test="record.sex != null">
        SEX = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.sage != null">
        SAGE = #{record.sage,jdbcType=TINYINT},
      </if>
      <if test="record.sdept != null">
        SDEPT = #{record.sdept,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set SNO = #{record.sno,jdbcType=CHAR},
      SNAME = #{record.sname,jdbcType=CHAR},
      SEX = #{record.sex,jdbcType=CHAR},
      SAGE = #{record.sage,jdbcType=TINYINT},
      SDEPT = #{record.sdept,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>