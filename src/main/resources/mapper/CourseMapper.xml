<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jalinyiel.coursystem.system.repository.CourseMapper">
  <resultMap id="BaseResultMap" type="com.jalinyiel.coursystem.system.domain.Course">
    <id column="cour_no" jdbcType="INTEGER" property="courNo" />
    <result column="cour_name" jdbcType="VARCHAR" property="courName" />
    <result column="credit" jdbcType="TINYINT" property="credit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cour_no, cour_name, credit
  </sql>
  <select id="selectByExample" parameterType="com.jalinyiel.coursystem.system.domain.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where cour_no = #{courNo,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where cour_no = #{courNo,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jalinyiel.coursystem.system.domain.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jalinyiel.coursystem.system.domain.Course">
    insert into course (cour_no, cour_name, credit
      )
    values (#{courNo,jdbcType=INTEGER}, #{courName,jdbcType=VARCHAR}, #{credit,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jalinyiel.coursystem.system.domain.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courNo != null">
        cour_no,
      </if>
      <if test="courName != null">
        cour_name,
      </if>
      <if test="credit != null">
        credit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courNo != null">
        #{courNo,jdbcType=INTEGER},
      </if>
      <if test="courName != null">
        #{courName,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jalinyiel.coursystem.system.domain.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.courNo != null">
        cour_no = #{record.courNo,jdbcType=INTEGER},
      </if>
      <if test="record.courName != null">
        cour_name = #{record.courName,jdbcType=VARCHAR},
      </if>
      <if test="record.credit != null">
        credit = #{record.credit,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set cour_no = #{record.courNo,jdbcType=INTEGER},
      cour_name = #{record.courName,jdbcType=VARCHAR},
      credit = #{record.credit,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jalinyiel.coursystem.system.domain.Course">
    update course
    <set>
      <if test="courName != null">
        cour_name = #{courName,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        credit = #{credit,jdbcType=TINYINT},
      </if>
    </set>
    where cour_no = #{courNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jalinyiel.coursystem.system.domain.Course">
    update course
    set cour_name = #{courName,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=TINYINT}
    where cour_no = #{courNo,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.jalinyiel.coursystem.system.domain.Course">
    <result column="CNO" jdbcType="INTEGER" property="cno" />
    <result column="CNAME" jdbcType="CHAR" property="cname" />
    <result column="CPNO" jdbcType="CHAR" property="cpno" />
    <result column="CCREDIT" jdbcType="SMALLINT" property="ccredit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CNO, CNAME, CPNO, CCREDIT
  </sql>
  <select id="selectByExample" parameterType="com.jalinyiel.coursystem.system.domain.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jalinyiel.coursystem.system.domain.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jalinyiel.coursystem.system.domain.Course">
    insert into course (CNO, CNAME, CPNO, CCREDIT
      )
    values (#{cno,jdbcType=INTEGER}, #{cname,jdbcType=CHAR}, #{cpno,jdbcType=CHAR}, #{ccredit,jdbcType=SMALLINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jalinyiel.coursystem.system.domain.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cno != null">
        CNO,
      </if>
      <if test="cname != null">
        CNAME,
      </if>
      <if test="cpno != null">
        CPNO,
      </if>
      <if test="ccredit != null">
        CCREDIT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cno != null">
        #{cno,jdbcType=INTEGER},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=CHAR},
      </if>
      <if test="cpno != null">
        #{cpno,jdbcType=CHAR},
      </if>
      <if test="ccredit != null">
        #{ccredit,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jalinyiel.coursystem.system.domain.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.cno != null">
        CNO = #{record.cno,jdbcType=INTEGER},
      </if>
      <if test="record.cname != null">
        CNAME = #{record.cname,jdbcType=CHAR},
      </if>
      <if test="record.cpno != null">
        CPNO = #{record.cpno,jdbcType=CHAR},
      </if>
      <if test="record.ccredit != null">
        CCREDIT = #{record.ccredit,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set CNO = #{record.cno,jdbcType=INTEGER},
      CNAME = #{record.cname,jdbcType=CHAR},
      CPNO = #{record.cpno,jdbcType=CHAR},
      CCREDIT = #{record.ccredit,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>